# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:7.10
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run:
          name: test
          command: yarn test
      - store_test_results: # special step to save test results as as artifact
          path: test-results

      - run:
          name: build
          command: yarn build

      - persist_to_workspace:
          root: .
          paths:
            - dist/backend.js
            - Dockerfile
            - package.json
            - yarn.lock
  deploy:
    working_directory: ~/repo
    docker:
      - image: circleci/node:8.11.1
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/repo
      - setup_remote_docker

      - run:
          name: Install Heroku
          command: |
            sudo npm install -g heroku

      - run:
          name: Build and Deploy Docker image to Heroku
          command: |
            docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
            heroku container:push web --app=$HEROKU_APP_NAME
            heroku container:release web --app=$HEROKU_APP_NAME

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          context: heroku-fcc
          requires:
            - build
          filters:
            branches:
              only: master